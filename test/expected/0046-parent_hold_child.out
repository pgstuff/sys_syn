BEGIN;
CREATE EXTENSION tinyint
    SCHEMA public;
CREATE EXTENSION sys_syn;
CREATE SCHEMA user_data
    AUTHORIZATION postgres;
CREATE TABLE user_data.parent_table (
        parent_table_id_1 integer NOT NULL,
        parent_table_id_2 integer NOT NULL,
        parent_table_text text,
        CONSTRAINT parent_table_pid PRIMARY KEY (parent_table_id_1, parent_table_id_2));
CREATE TABLE user_data.child_table (
        child_table_id integer NOT NULL,
        parent_table_id_1 integer,
        parent_table_id_2 integer,
        CONSTRAINT child_table_pid PRIMARY KEY (child_table_id));
INSERT INTO sys_syn.in_groups_def VALUES ('in');
SELECT sys_syn.in_table_add_sql('user_data.parent_table'::regclass, 'in');
                                             in_table_add_sql                                              
-----------------------------------------------------------------------------------------------------------
 SELECT sys_syn.in_table_add (                                                                            +
                 schema          => 'user_data'::regnamespace,                                            +
                 in_table_id     => 'parent_table',                                                       +
                 in_group_id     => 'in',                                                                 +
                 in_pull_id      => NULL,                                                                 +
                 in_columns      => ARRAY[                                                                +
                        $COL$("parent_table_id_1","integer",ID,"in_source.parent_table_id_1",,,,)$COL$,   +
                        $COL$("parent_table_id_2","integer",ID,"in_source.parent_table_id_2",,,,)$COL$,   +
                        $COL$("parent_table_text","text",Attribute,"in_source.parent_table_text",,,,)$COL$+
                 ]::sys_syn.create_in_column[],                                                           +
                 full_table_reference    => 'user_data.parent_table',                                     +
                 changes_table_reference => NULL,                                                         +
                 full_sql                => NULL,                                                         +
                 changes_sql             => NULL,                                                         +
                 full_pre_sql            => NULL,                                                         +
                 changes_pre_sql         => NULL,                                                         +
                 full_post_sql           => NULL,                                                         +
                 changes_post_sql        => NULL,                                                         +
                 enable_deletes_implied  => TRUE,                                                         +
                 full_prepull_id         => NULL,                                                         +
                 changes_prepull_id      => NULL                                                          +
         );
(1 row)

DO $$BEGIN
        EXECUTE sys_syn.in_table_add_sql('user_data.parent_table'::regclass, 'in');
END$$;
SELECT sys_syn.in_table_add (
                schema          => 'user_data',
                in_table_id     => 'child_table',
                in_group_id     => 'in',
                in_pull_id      => NULL,
                in_columns      => ARRAY[
                       $COL$("child_table_id","integer",ID,"in_source.child_table_id",,,,)$COL$,
                       $COL$("parent_table_id_1","integer",Attribute,"in_source.parent_table_id_1",,1,"parent_table","parent_table_id_1")$COL$,
                       $COL$("parent_table_id_2","integer",Attribute,"in_source.parent_table_id_2",,1,"parent_table","parent_table_id_2")$COL$
                ]::sys_syn.create_in_column[],
                full_table_reference    => 'user_data.child_table'
        );
 in_table_add 
--------------
 
(1 row)

INSERT INTO user_data.parent_table(
        parent_table_id_1,     parent_table_id_2,     parent_table_text)
VALUES (1,                      2,                      'parent_data');
INSERT INTO user_data.child_table(
        child_table_id,        parent_table_id_1,     parent_table_id_2)
VALUES (3,                      1,                      2);
INSERT INTO sys_syn.out_groups_def VALUES ('out');
SELECT sys_syn.out_table_add('user_data', 'parent_table', 'out');
 out_table_add 
---------------
 
(1 row)

SELECT sys_syn.out_table_add('user_data', 'child_table', 'out');
 out_table_add 
---------------
 
(1 row)

ALTER TABLE user_data.parent_table_out_queue
  ADD FOREIGN KEY (trans_id_in, id) REFERENCES user_data.parent_table_in (trans_id_in, id) ON UPDATE RESTRICT ON DELETE RESTRICT;
SELECT user_data.parent_table_pull(FALSE);
 parent_table_pull 
-------------------
 t
(1 row)

SELECT user_data.parent_table_out_move();
 parent_table_out_move 
-----------------------
 t
(1 row)

SELECT id, delta_type, queue_state FROM user_data.parent_table_out_queue;
  id   | delta_type | queue_state 
-------+------------+-------------
 (1,2) | Add        | Unclaimed
(1 row)

UPDATE sys_syn.trans_id_mod SET trans_id_mod = trans_id_mod + 1;
SELECT user_data.child_table_pull(FALSE);
 child_table_pull 
------------------
 t
(1 row)

SELECT user_data.child_table_out_move();
 child_table_out_move 
----------------------
 f
(1 row)

SELECT id, delta_type, queue_state FROM user_data.child_table_out_queue;
 id | delta_type | queue_state 
----+------------+-------------
(0 rows)

UPDATE user_data.parent_table_out_queue SET queue_state = 'Claimed'::sys_syn.queue_state, hold_reason_text = 'Testing Hold' WHERE (id).parent_table_id_1 = 1;
UPDATE user_data.parent_table_out_queue SET queue_state = 'Hold'::sys_syn.queue_state, hold_reason_text = 'Testing Hold' WHERE (id).parent_table_id_1 = 1;
SELECT user_data.parent_table_out_processed();
 parent_table_out_processed 
----------------------------
 f
(1 row)

SELECT id, delta_type, queue_state FROM user_data.parent_table_out_queue;
  id   | delta_type | queue_state 
-------+------------+-------------
 (1,2) | Add        | Hold
(1 row)

UPDATE sys_syn.trans_id_mod SET trans_id_mod = trans_id_mod + 1;
SELECT user_data.child_table_pull(FALSE);
 child_table_pull 
------------------
 t
(1 row)

SELECT user_data.child_table_out_move();
 child_table_out_move 
----------------------
 f
(1 row)

SELECT id, delta_type, queue_state FROM user_data.child_table_out_queue;
 id | delta_type | queue_state 
----+------------+-------------
(0 rows)

UPDATE user_data.parent_table_out_queue SET queue_state = 'Claimed'::sys_syn.queue_state WHERE (id).parent_table_id_1 = 1;
UPDATE user_data.parent_table_out_queue SET queue_state = 'Processed'::sys_syn.queue_state WHERE (id).parent_table_id_1 = 1;
SELECT user_data.parent_table_out_processed();
 parent_table_out_processed 
----------------------------
 t
(1 row)

SELECT id, delta_type, queue_state FROM user_data.parent_table_out_queue;
 id | delta_type | queue_state 
----+------------+-------------
(0 rows)

UPDATE sys_syn.trans_id_mod SET trans_id_mod = trans_id_mod + 1;
SELECT user_data.child_table_pull(FALSE);
 child_table_pull 
------------------
 t
(1 row)

SELECT user_data.child_table_out_move();
 child_table_out_move 
----------------------
 t
(1 row)

SELECT id, delta_type, queue_state FROM user_data.child_table_out_queue;
 id  | delta_type | queue_state 
-----+------------+-------------
 (3) | Add        | Unclaimed
(1 row)

ROLLBACK;
