BEGIN;
CREATE EXTENSION tinyint
    SCHEMA public;
CREATE EXTENSION sys_syn;
CREATE SCHEMA user_data
    AUTHORIZATION postgres;
CREATE TABLE user_data.test_table (
        test_table_id integer NOT NULL,
        test_table_text text,
        no_diff_text text,
        delete_row_indicator boolean DEFAULT FALSE,
        CONSTRAINT test_table_pid PRIMARY KEY (test_table_id));
INSERT INTO sys_syn.in_groups_def VALUES ('in');
INSERT INTO sys_syn.in_column_transforms (
        rule_group_id,        priority,       data_type_like, relation_name_like,     column_name_like,
        in_column_type, new_data_type,  new_in_column_type,     omit,   new_column_name,
        final_rule)
VALUES (null,           50,             null,           null,                   'no_diff_text',
        null,           null,           'NoDiff',               null,   null,
        FALSE);
INSERT INTO sys_syn.in_column_transforms (
        rule_group_id,        priority,       data_type_like, relation_name_like,     column_name_like,
        in_column_type, new_data_type,  new_in_column_type,     omit,   new_column_name,
        final_rule)
VALUES (null,           50,             'boolean',      null,                   'delete_row_indicator',
        'Attribute',    null,           'NoDiff',               FALSE,  'sys_syn_delete',
        TRUE);
SELECT sys_syn.in_table_add_sql('user_data.test_table'::regclass, 'in');
                                             in_table_add_sql                                              
-----------------------------------------------------------------------------------------------------------
 SELECT sys_syn.in_table_add (                                                                            +
                 schema          => 'user_data'::regnamespace,                                            +
                 in_table_id     => 'test_table',                                                         +
                 in_group_id     => 'in',                                                                 +
                 in_pull_id      => NULL,                                                                 +
                 in_columns      => ARRAY[                                                                +
                        $COL$("test_table_id","integer",Id,"in_source.test_table_id",,,,)$COL$,           +
                        $COL$("test_table_text","text",Attribute,"in_source.test_table_text",,,,)$COL$,   +
                        $COL$("no_diff_text","text",NoDiff,"in_source.no_diff_text",,,,)$COL$,            +
                        $COL$("sys_syn_delete","boolean",NoDiff,"in_source.delete_row_indicator",,,,)$COL$+
                 ]::sys_syn.create_in_column[],                                                           +
                 full_table_reference    => 'user_data.test_table',                                       +
                 changes_table_reference => NULL,                                                         +
                 full_sql                => NULL,                                                         +
                 changes_sql             => NULL,                                                         +
                 full_pre_sql            => NULL,                                                         +
                 changes_pre_sql         => NULL,                                                         +
                 full_post_sql           => NULL,                                                         +
                 changes_post_sql        => NULL,                                                         +
                 enable_deletes_implied  => TRUE,                                                         +
                 full_prepull_id         => NULL,                                                         +
                 changes_prepull_id      => NULL                                                          +
         );
(1 row)

DO $$BEGIN
    EXECUTE sys_syn.in_table_add_sql('user_data.test_table'::regclass, 'in');
END$$;
INSERT INTO user_data.test_table(
        test_table_id, test_table_text,        no_diff_text,   delete_row_indicator)
VALUES (1,              'test_data1',           'not used',     FALSE);
INSERT INTO sys_syn.out_groups_def VALUES ('out');
SELECT sys_syn.out_table_add('user_data', 'test_table', 'out');
 out_table_add 
---------------
 
(1 row)

SELECT user_data.test_table_pull(FALSE);
 test_table_pull 
-----------------
 t
(1 row)

SELECT  (in_data.id).*,
        '<Id   Attr>' AS id_attr,
        (in_data.attributes).*,
        '<Attr   NoD>' AS attr_nod,
        (in_data.no_diff).*
FROM    user_data.test_table_in AS in_data;
 test_table_id |   id_attr   | test_table_text |   attr_nod   | no_diff_text | sys_syn_delete 
---------------+-------------+-----------------+--------------+--------------+----------------
             1 | <Id   Attr> | test_data1      | <Attr   NoD> | not used     | f
(1 row)

SELECT user_data.test_table_out_move();
 test_table_out_move 
---------------------
 t
(1 row)

SELECT  out_queue.id,
        out_queue.delta_type,
        out_queue.queue_state,
        (in_data.id).*,
        '<Id   Attr>' AS id_attr,
        (in_data.attributes).*,
        '<Attr   NoD>' AS attr_nod,
        (in_data.no_diff).*
FROM    user_data.test_table_out_queue AS out_queue
        LEFT JOIN user_data.test_table_in AS in_data USING (trans_id_in, id);
 id  | delta_type | queue_state | test_table_id |   id_attr   | test_table_text |   attr_nod   | no_diff_text | sys_syn_delete 
-----+------------+-------------+---------------+-------------+-----------------+--------------+--------------+----------------
 (1) | Add        | Unclaimed   |             1 | <Id   Attr> | test_data1      | <Attr   NoD> | not used     | f
(1 row)

UPDATE user_data.test_table_out_queue SET queue_state = 'Claimed'::sys_syn.queue_state WHERE (id).test_table_id IN (1, 2);
UPDATE user_data.test_table_out_queue SET queue_state = 'Processed'::sys_syn.queue_state WHERE (id).test_table_id IN (1, 2);
SELECT user_data.test_table_out_processed();
 test_table_out_processed 
--------------------------
 t
(1 row)

SELECT  out_baseline.id,
        (in_data.id).*,
        '<Id   Attr>' AS id_attr,
        (in_data.attributes).*,
        '<Attr   NoD>' AS attr_nod,
        (in_data.no_diff).*
FROM    user_data.test_table_out_baseline AS out_baseline
        LEFT JOIN user_data.test_table_in AS in_data USING (trans_id_in, id);
 id  | test_table_id |   id_attr   | test_table_text |   attr_nod   | no_diff_text | sys_syn_delete 
-----+---------------+-------------+-----------------+--------------+--------------+----------------
 (1) |             1 | <Id   Attr> | test_data1      | <Attr   NoD> | not used     | f
(1 row)

ROLLBACK;
